@using Garage2._5.Helper
@using PagedList.Mvc
@model PagedList.IPagedList<Garage2._5.Models.Vehicle>

@{
    ViewBag.Title = "Parked Vehicles";
}

<h2>@ViewBag.Title</h2>
<p>
    @ViewBag.Vacant
</p>
@if (ViewBag.HasVacantSpots) {
    <p>
        @Html.ActionLink("Checkin new vehicle", "Checkin")
    </p>
}

<p>
    @using (Html.BeginForm("Index", "Vehicles", FormMethod.Get))
    {
        <span>
            Find by registration number: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            @Html.DropDownList("selectedvehicletype", (SelectList)ViewBag.VehicleTypes, "All vehicle types", htmlAttributes: new { @class = "selectStyle" })
            <input type="submit" value="Search" />
        </span>
    }
</p>
<table class="table table-striped">
    <tr>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.First().Owner).ToString(), "Index", new { orderBy = ViewBag.CurrentSort == "user" ? "user_dec" : "user", currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.First().Type).ToString(), "Index", new { orderBy = ViewBag.CurrentSort == "type" ? "type_dec" : "type", currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.First().Registration).ToString(), "Index", new { orderBy = ViewBag.CurrentSort == "registration" ? "registration_dec" : "registration", currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.First().ParkedTime).ToString(), "Index", new { orderBy = ViewBag.CurrentSort == "time" ? "time_dec" : "time", currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.First().ParkingSpot).ToString(), "Index", new { orderBy = ViewBag.CurrentSort == "spot" ? "spot_dec" : "spot", currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.ActionLink(item.Owner.Name, "Details", "Members", new { Id = item.Owner.Id }, null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type.Type)
            </td>
            <td>
                @RegistrationNormalizer.NormalizeForDisplay(item.Registration)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ParkedTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ParkingSpot)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Checkout", "Checkout", new { id = item.Id })
            </td>
        </tr>
    }

</table>
@if (Model.PageCount > 1)
{
    <p>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, orderBy = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, selectedvehicletype = ViewBag.selectedvehicletype, selectedvehiclecolor = ViewBag.selectedvehiclecolor }))
    </p>
}